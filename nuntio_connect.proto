syntax = "proto3";

package Connect;

option go_package = "./go_nuntio";

import "google/protobuf/timestamp.proto";
import "nuntio.proto";

service Authenticate {
    rpc Heartbeat(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc ValidateLoginChallenge(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc Login(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc ValidateConsentChallenge(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc GiveConsent(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc Logout(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc CreateUser(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc SendResetEmail(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc ResetPassword(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc Verify(AuthenticateRequest) returns (AuthenticateResponse) {}
}

service Service {
    rpc Heartbeat(ConnectRequest) returns (ConnectResponse) {}
    rpc Create(ConnectRequest) returns (ConnectResponse) {}
    rpc GetById(ConnectRequest) returns (ConnectResponse) {}
    rpc UpdateDetails(ConnectRequest) returns (ConnectResponse) {}
    rpc Delete(ConnectRequest) returns (ConnectResponse) {}
}

message Metadata {
    bool is_open = 1;
    repeated string allowed_emails = 21;
    string about = 3;
    int32 age_lower_limit = 4;
    int32 age_upper_limit = 5;
    repeated Nuntio.CountryCode allowed_countries = 6;
    bool only_verified_users = 7;
}

message App {
    string id = 1;
    string name = 2;
    string password = 3;
    string email = 4;
    string owner_id = 5;
    string website = 6;
    string logo = 7;
    string terms = 8;
    Metadata metadata = 9;
    repeated string audience = 10;
    repeated string scopes = 11;
    repeated string callbacks = 12;
    google.protobuf.Timestamp created_at = 13;
    google.protobuf.Timestamp updated_at = 14;
    repeated Nuntio.Country available_countries = 15;
}

message AuthenticateRequest {
    string challenge = 1;
    string email = 2;
    string password = 3;
    Nuntio.Gender gender = 4;
    bool consent = 5;
    string identity_token = 6;
    Nuntio.VerificationProvider verification_provider = 7;
    string auth_token = 8;
}

message AuthenticateResponse {
    App app = 1;
    string email = 2;
    string redirect_addr = 3;
    Nuntio.Error error = 4; 
}

message ConnectRequest {
    App app = 1;
}

message ConnectResponse {
    App app = 1;
}