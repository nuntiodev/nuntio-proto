syntax = "proto3";

package Connect;

option go_package = "./go_nuntio";

import "google/protobuf/timestamp.proto";

service Authenticate {
    rpc Heartbeat(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc ValidateLoginChallenge(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc Login(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc ValidateConsentChallenge(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc GiveConsent(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc Logout(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc CreateUser(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc SendResetEmail(AuthenticateRequest) returns (AuthenticateResponse) {}
    rpc ResetPassword(AuthenticateRequest) returns (AuthenticateResponse) {}
}

service Service {
    rpc Heartbeat(ConnectRequest) returns (ConnectResponse) {}
    rpc Create(ConnectRequest) returns (ConnectResponse) {}
    rpc GetById(ConnectRequest) returns (ConnectResponse) {}
    rpc UpdateDetails(ConnectRequest) returns (ConnectResponse) {}
    rpc Delete(ConnectRequest) returns (ConnectResponse) {}
}

message Metadata {
    bool is_open = 1;
    repeated string allowed_emails = 21;
    string about = 3;
}

enum VerificationProviderType {
    INVALID = 0;
    MITID = 1;
}

message VerificationProvider {
    VerificationProviderType type = 1;
    string name = 2;
}


message Error {
    ErrorType error = 1;
    string message = 2;
}

enum ErrorType {
    NO_ERROR = 0;
    CONNECT_IS_NOT_OPEN = 1;
    CONNECT_WEAK_PASSWORD = 2;
}

message UserMetadata {
    CountryCode country_code = 1;
    Gender gender = 2;
    VerificationProviderType verification_provider = 3;
}


enum CountryCode {
    INVALID_COUNTRY = 0;
    DK = 1;
    NO = 2;
    DE = 3;
}

enum Gender {
    INVALID_GENDER = 0;
    MALE = 1;
    FEMALE = 2;
    OTHER = 3;
}

message Country {
    CountryCode country_code = 1;
    string name = 2;
}


message App {
    string id = 1;
    string name = 2;
    string password = 3;
    string email = 4;
    string owner_id = 5;
    string website = 6;
    string logo = 7;
    string terms = 8;
    Metadata metadata = 9;
    repeated string callbacks = 10;
    google.protobuf.Timestamp created_at = 11;
    google.protobuf.Timestamp updated_at = 12;
}

message AuthenticateRequest {
    string challenge = 1;
    string email = 2;
    string password = 3;
    bool consent = 4;
    string identity_token = 5;
    VerificationProvider verification_provider = 6;
    string auth_token = 7;
    UserMetadata userMetadata = 8;
}

message AuthenticateResponse {
    App app = 1;
    string email = 2;
    string redirect_addr = 3;
    Error error = 4;
}

message ConnectRequest {
    App app = 1;
}

message ConnectResponse {
    App app = 1;
}